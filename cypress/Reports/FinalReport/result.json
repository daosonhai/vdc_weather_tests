{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 4,
    "pending": 0,
    "failures": 1,
    "start": "2021-05-16T10:06:34.611Z",
    "end": "2021-05-16T10:07:40.054Z",
    "duration": 65284,
    "testsRegistered": 5,
    "passPercent": 80,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "39955755-e7d6-4221-a789-ff2eec716aa9",
      "title": "",
      "fullFile": "cypress/Tests/SERP.spec.js",
      "file": "cypress/Tests/SERP.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a3e44160-61d9-4fee-b976-4d9d86dd010a",
          "title": "Open Weather - SERP",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC1 - Verify user can search a valid given city",
              "fullTitle": "Open Weather - SERP TC1 - Verify user can search a valid given city",
              "timedOut": null,
              "duration": 40450,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const testCities = ['Ho Chi Minh', 'tokyo', 'Bern, CH'];\ncy.visit(_URL.default.serpPage);\ncy.wait('@dataLoaded');\ncy.wrap(testCities).each(city => {\n  cy.get(_SERP.default.txtSearch).scrollIntoView().type(city, {\n    delay: 100\n  });\n  cy.get(_SERP.default.btnSubmit).click();\n  cy.wait('@citySuggestionLoaded').then(({\n    response\n  }) => {\n    const {\n      body: {\n        list: [selectedCity]\n      }\n    } = response;\n    cy.get(_SERP.default.citySuggestion).first().click();\n    cy.wait('@dataLoaded').then(({\n      request,\n      response\n    }) => {\n      const {\n        body: {\n          lat: actualLat,\n          lon: actualLon\n        }\n      } = response;\n      expect(request.url).include(`lat=${selectedCity.coord.lat}`);\n      expect(request.url).include(`lon=${selectedCity.coord.lon}`);\n      expect(actualLat).to.eq(selectedCity.coord.lat);\n      expect(actualLon).to.eq(selectedCity.coord.lon);\n      cy.url().should('contain', selectedCity.id);\n      cy.getCookie(_Cookie.default.cityId).should('have.property', 'value', String(selectedCity.id));\n    });\n  });\n});",
              "err": {},
              "uuid": "bd25a807-4424-4319-9d8b-f380ecc467b1",
              "parentUUID": "a3e44160-61d9-4fee-b976-4d9d86dd010a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC2 - Verify current city's weather is automatically displayed when openning the page",
              "fullTitle": "Open Weather - SERP TC2 - Verify current city's weather is automatically displayed when openning the page",
              "timedOut": null,
              "duration": 15043,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const testCities = [{\n  id: '2660764',\n  name: 'Flamatt, CH'\n}];\ncy.wrap(testCities).each(city => {\n  cy.clearCookie(_Cookie.default.cityId);\n  cy.setCookie(_Cookie.default.cityId, city.id);\n  cy.visit(_URL.default.serpPage);\n  cy.wait('@dataLoaded');\n  cy.get(_SERP.default.cityName).should('contain', city.name);\n  cy.visit(_URL.default.serpPage);\n});",
              "err": {},
              "uuid": "4a7b6829-d12a-4013-b32f-58c610b1b4e9",
              "parentUUID": "a3e44160-61d9-4fee-b976-4d9d86dd010a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC3 - Verify API error codes returned are handled properly",
              "fullTitle": "Open Weather - SERP TC3 - Verify API error codes returned are handled properly",
              "timedOut": null,
              "duration": 9717,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const errorCodes = [{\n  code: 500,\n  body: {\n    cod: 500,\n    message: \"Internal server error\"\n  }\n}, {\n  code: 422,\n  body: {\n    code: 422,\n    message: \"invalid input, please retype your city\"\n  }\n}, {\n  code: 401,\n  body: {\n    cod: 401,\n    message: \"Invalid API key. Please see http://openweathermap.org/faq#error401 for more info.\"\n  }\n}];\ncy.visit(_URL.default.serpPage);\ncy.wrap(errorCodes).each(({\n  code,\n  body\n}) => {\n  cy.intercept({\n    pathname: _API.default.dataFind\n  }, req => {\n    req.continue(res => {\n      res.statusCode = code;\n      res.body = body;\n    });\n  }).as(`mockedError${code}`);\n  cy.get(_SERP.default.txtSearch).type('Bien Hoa, VN');\n  cy.get(_SERP.default.btnSubmit).click();\n  cy.wait(`@mockedError${code}`).then(({\n    response\n  }) => {\n    expect(response.statusCode).to.equal(code);\n  });\n  switch (code) {\n    case 500:\n      //Assume a modal dialog is shown when error 500 is returned\n      cy.get(_Modal.default.frmErrorModal).should('be.visible');\n      break;\n    case 422:\n      //Assume an error validation message is shown when error 422 is returned\n      cy.get(_SERP.default.msgValidationError).should('be.visible').should('contain', body.message);\n      break;\n    case 401:\n      //Assume browser redirect to login page when error 401 is returned\n      cy.url().should('contain', 'login');\n      break;\n  }\n});",
              "err": {
                "message": "CypressError: Timed out retrying after 4000ms: `cy.type()` failed because this element:\n\n`<input data-v-12f747a3=\"\" type=\"text\" placeholder=\"Search city\" class=\"\">`\n\nis being covered by another element:\n\n`<div tabindex=\"0\" aria-label=\"Loading\" class=\"owm-loader\">...</div>`\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with",
                "estack": "CypressError: Timed out retrying after 4000ms: `cy.type()` failed because this element:\n\n`<input data-v-12f747a3=\"\" type=\"text\" placeholder=\"Search city\" class=\"\">`\n\nis being covered by another element:\n\n`<div tabindex=\"0\" aria-label=\"Loading\" class=\"owm-loader\">...</div>`\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with\n    at $Cy.ensureDescendents (https://openweathermap.org/__cypress/runner/cypress_runner.js:142477:26)\n    at ensureDescendents (https://openweathermap.org/__cypress/runner/cypress_runner.js:130773:8)\n    at ensureDescendentsAndScroll (https://openweathermap.org/__cypress/runner/cypress_runner.js:130780:14)\n    at ensureElIsNotCovered (https://openweathermap.org/__cypress/runner/cypress_runner.js:130914:5)\n    at runAllChecks (https://openweathermap.org/__cypress/runner/cypress_runner.js:131101:52)\n    at retryActionability (https://openweathermap.org/__cypress/runner/cypress_runner.js:131124:16)\n    at tryCatcher (https://openweathermap.org/__cypress/runner/cypress_runner.js:10791:23)\n    at Function.Promise.attempt.Promise.try (https://openweathermap.org/__cypress/runner/cypress_runner.js:8065:29)\n    at tryFn (https://openweathermap.org/__cypress/runner/cypress_runner.js:146954:21)\n    at whenStable (https://openweathermap.org/__cypress/runner/cypress_runner.js:146992:12)\n    at https://openweathermap.org/__cypress/runner/cypress_runner.js:146484:16\n    at tryCatcher (https://openweathermap.org/__cypress/runner/cypress_runner.js:10791:23)\n    at Promise._settlePromiseFromHandler (https://openweathermap.org/__cypress/runner/cypress_runner.js:8726:31)\n    at Promise._settlePromise (https://openweathermap.org/__cypress/runner/cypress_runner.js:8783:18)\n    at Promise._settlePromise0 (https://openweathermap.org/__cypress/runner/cypress_runner.js:8828:10)\n    at Promise._settlePromises (https://openweathermap.org/__cypress/runner/cypress_runner.js:8908:18)\nFrom Your Spec Code:\n    at eval (https://openweathermap.org/__cypress/tests?p=cypress\\Tests\\SERP.spec.js:240:9)",
                "diff": null
              },
              "uuid": "5423a77f-a8cb-473f-87c5-e078166c121d",
              "parentUUID": "a3e44160-61d9-4fee-b976-4d9d86dd010a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC4 - Verify layout is broken on different screen sizes",
              "fullTitle": "Open Weather - SERP TC4 - Verify layout is broken on different screen sizes",
              "timedOut": null,
              "duration": 48,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "403ecf45-eadb-439d-be70-74f5c256544b",
              "parentUUID": "a3e44160-61d9-4fee-b976-4d9d86dd010a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC5 - Verify API response reflects exactly request's param",
              "fullTitle": "Open Weather - SERP TC5 - Verify API response reflects exactly request's param",
              "timedOut": null,
              "duration": 26,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "43f97f9f-2110-4273-b3eb-d57c858343b5",
              "parentUUID": "a3e44160-61d9-4fee-b976-4d9d86dd010a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bd25a807-4424-4319-9d8b-f380ecc467b1",
            "4a7b6829-d12a-4013-b32f-58c610b1b4e9",
            "403ecf45-eadb-439d-be70-74f5c256544b",
            "43f97f9f-2110-4273-b3eb-d57c858343b5"
          ],
          "failures": [
            "5423a77f-a8cb-473f-87c5-e078166c121d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 65284,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/Reports/Mochawesome",
        "charts": true,
        "quiet": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}