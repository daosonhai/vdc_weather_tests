{
  "stats": {
    "suites": 1,
    "tests": 6,
    "passes": 4,
    "pending": 0,
    "failures": 2,
    "start": "2021-05-20T03:50:47.742Z",
    "end": "2021-05-20T03:52:15.079Z",
    "duration": 87337,
    "testsRegistered": 6,
    "passPercent": 66.66666666666666,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "11f6c745-0bdc-4815-8f5e-19f1ee43bd44",
      "title": "",
      "fullFile": "cypress/Tests/SERP.spec.js",
      "file": "cypress/Tests/SERP.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b8ea9626-0069-4d90-b937-6953e9b485be",
          "title": "Open Weather - SERP - UI Level",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC1 - Verify user can search a valid given city",
              "fullTitle": "Open Weather - SERP - UI Level TC1 - Verify user can search a valid given city",
              "timedOut": null,
              "duration": 51352,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "\"Attachment/Videos/SERP.spec.js.mp4\"",
              "code": "const testCities = ['Ho Chi Minh', 'tokyo', 'Bern, CH'];\ncy.visit(_URL.default.serpPage);\ncy.wait('@dataLoaded');\ncy.wrap(testCities).each(city => {\n  cy.searchCity(city);\n  cy.wait('@citySuggestionLoaded').then(({\n    response\n  }) => {\n    const {\n      body: {\n        list: [selectedCity]\n      }\n    } = response;\n    cy.wait('@dataLoaded').then(({\n      request,\n      response\n    }) => {\n      const {\n        body: {\n          lat: actualLat,\n          lon: actualLon\n        }\n      } = response;\n      expect(request.url).include(`lat=${selectedCity.coord.lat}`);\n      expect(request.url).include(`lon=${selectedCity.coord.lon}`);\n      expect(actualLat).to.eq(selectedCity.coord.lat);\n      expect(actualLon).to.eq(selectedCity.coord.lon);\n      cy.url().should('contain', selectedCity.id);\n      cy.getCookie(_Cookie.default.cityId).should('have.property', 'value', String(selectedCity.id));\n    });\n  });\n});",
              "err": {},
              "uuid": "c1555f0a-23fa-4267-80bd-d01f019c44f7",
              "parentUUID": "b8ea9626-0069-4d90-b937-6953e9b485be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC2 - Verify current city's weather is automatically displayed when openning the page",
              "fullTitle": "Open Weather - SERP - UI Level TC2 - Verify current city's weather is automatically displayed when openning the page",
              "timedOut": null,
              "duration": 5678,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "\"Attachment/Videos/SERP.spec.js.mp4\"",
              "code": "const testCities = [{\n  id: '2660764',\n  name: 'Flamatt, CH'\n}];\ncy.wrap(testCities).each(city => {\n  cy.clearCookie(_Cookie.default.cityId);\n  cy.setCookie(_Cookie.default.cityId, city.id);\n  cy.visit(_URL.default.serpPage);\n  cy.wait('@dataLoaded');\n  cy.get(_SERP.default.cityName).should('contain', city.name);\n});",
              "err": {},
              "uuid": "4f7bd693-72e4-40f8-b201-4f4ecb9b733c",
              "parentUUID": "b8ea9626-0069-4d90-b937-6953e9b485be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC3 - Verify API error codes returned are handled properly",
              "fullTitle": "Open Weather - SERP - UI Level TC3 - Verify API error codes returned are handled properly",
              "timedOut": null,
              "duration": 20538,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "\"Attachment/Videos/SERP.spec.js.mp4\"",
              "code": "const errorCodes = [{\n  code: 500,\n  body: {\n    cod: 500,\n    message: \"Internal server error\"\n  }\n}, {\n  code: 422,\n  body: {\n    code: 422,\n    message: \"invalid input, please retype your city\"\n  }\n}, {\n  code: 401,\n  body: {\n    cod: 401,\n    message: \"Invalid API key. Please see http://openweathermap.org/faq#error401 for more info.\"\n  }\n}];\ncy.visit(_URL.default.serpPage);\ncy.wrap(errorCodes).each(({\n  code,\n  body\n}) => {\n  cy.intercept({\n    pathname: _API.default.dataFind\n  }, req => {\n    req.continue(res => {\n      res.statusCode = code;\n      res.body = body;\n    });\n  }).as(`mockedError${code}`);\n  cy.searchCity('Bien Hoa, VN');\n  cy.wait(`@mockedError${code}`).then(({\n    response\n  }) => {\n    expect(response.statusCode).to.equal(code);\n  });\n  switch (code) {\n    case 500:\n      //Assume a modal dialog is shown when error 500 is returned\n      cy.get(_Modal.default.frmErrorModal).should('be.visible');\n      break;\n    case 422:\n      //Assume an error validation message is shown when error 422 is returned\n      cy.get(_SERP.default.msgValidationError).should('be.visible').should('contain', body.message);\n      break;\n    case 401:\n      //Assume browser redirect to login page when error 401 is returned\n      cy.url().should('contain', 'login');\n      break;\n  }\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-refname=\"modal-error-modal\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-refname=\"modal-error-modal\"]`, but never found it.\n    at Context.eval (https://openweathermap.org/__cypress/tests?p=cypress\\Tests\\SERP.spec.js:356:48)",
                "diff": null
              },
              "uuid": "209eb395-88e6-47a6-b77e-5542b17c4778",
              "parentUUID": "b8ea9626-0069-4d90-b937-6953e9b485be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC4 - Verify city suggestions are displayed in the default measure system",
              "fullTitle": "Open Weather - SERP - UI Level TC4 - Verify city suggestions are displayed in the default measure system",
              "timedOut": null,
              "duration": 9457,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "\"Attachment/Videos/SERP.spec.js.mp4\"",
              "code": "const measureSystems = ['metric', 'imperial'];\nconst mockedDataFind = __webpack_require__(/*! ../Datasets/mockedDataFind.json */ \"./cypress/Datasets/mockedDataFind.json\");\ncy.visit(_URL.default.serpPage);\ncy.wait('@dataLoaded');\ncy.intercept({\n  pathname: _API.default.dataFind\n}, req => {\n  req.continue(res => {\n    res.statusCode = 200;\n    res.body = mockedDataFind;\n  });\n}).as('suggestionLoaded');\ncy.wrap(measureSystems).each(system => {\n  cy.selectMeasureSystem(system);\n  cy.get(_SERP.default.txtSearch).scrollIntoView().type('zurich,ch{enter}', {\n    force: true\n  });\n  cy.wait('@suggestionLoaded');\n  cy.get(_SERP.default.citySuggestions).scrollIntoView().matchImageSnapshot(`${system} - Suggested Cities`);\n});",
              "err": {
                "message": "Error: Image size (512x127) different than saved snapshot size (409x102).\nSee diff for details: cypress\\Attachment\\snapshots\\SERP.spec.js\\__diff_output__\\metric - Suggested Cities.diff.png",
                "estack": "Error: Image size (512x127) different than saved snapshot size (409x102).\nSee diff for details: cypress\\Attachment\\snapshots\\SERP.spec.js\\__diff_output__\\metric - Suggested Cities.diff.png\n    at Context.eval (https://openweathermap.org/__cypress/tests?p=cypress\\Actions:2138:17)",
                "diff": null
              },
              "uuid": "55bd84bc-64f2-486b-945f-6f33bb3888a0",
              "parentUUID": "b8ea9626-0069-4d90-b937-6953e9b485be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC5 - Verify invalid data is validated",
              "fullTitle": "Open Weather - SERP - UI Level TC5 - Verify invalid data is validated",
              "timedOut": null,
              "duration": 80,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "\"Attachment/Videos/SERP.spec.js.mp4\"",
              "code": "//The way to implement this test case will be similar to the TC1, so I won't write it down",
              "err": {},
              "uuid": "dc9c89b0-2b34-48fa-8431-c805d8db3ca0",
              "parentUUID": "b8ea9626-0069-4d90-b937-6953e9b485be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC6 - Verify layout isn't broken on different screen sizes",
              "fullTitle": "Open Weather - SERP - UI Level TC6 - Verify layout isn't broken on different screen sizes",
              "timedOut": null,
              "duration": 38,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "\"Attachment/Videos/SERP.spec.js.mp4\"",
              "code": "//The way to implement this test case will be similar to the TC4, so I won't write it down",
              "err": {},
              "uuid": "9c527e4e-6ba3-4083-b7e3-d711de88c79a",
              "parentUUID": "b8ea9626-0069-4d90-b937-6953e9b485be",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c1555f0a-23fa-4267-80bd-d01f019c44f7",
            "4f7bd693-72e4-40f8-b201-4f4ecb9b733c",
            "dc9c89b0-2b34-48fa-8431-c805d8db3ca0",
            "9c527e4e-6ba3-4083-b7e3-d711de88c79a"
          ],
          "failures": [
            "209eb395-88e6-47a6-b77e-5542b17c4778",
            "55bd84bc-64f2-486b-945f-6f33bb3888a0"
          ],
          "pending": [],
          "skipped": [],
          "duration": 87143,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/Reports/Mochawesome",
        "charts": true,
        "quiet": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}